host: phoenix-16.prism
Building DAG of jobs...
Using shell: /usr/bin/bash
Provided remote nodes: 1
Provided resources: mem_mb=100000, mem_mib=95368, disk_mb=1000, disk_mib=954
Conda environments: ignored
Select jobs to execute...
Execute 1 jobs...

[Tue Mar 11 09:44:50 2025]
rule circularize_merged:
    input: /private/groups/russelllab/jodie/merrill_23_wRi_genome/merged_polished/wRi/merged_pilon.fasta, /private/groups/russelllab/jodie/merrill_23_wRi_genome/nanopore_data/basecalled/merrill_23_all_basecalled.wRi.fastq.gz
    output: /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/wRi_final_merged_polished_circular.fasta, /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/assembly_stats.txt
    jobid: 0
    reason: Forced execution
    threads: 32
    resources: mem_mb=100000, mem_mib=95368, disk_mb=1000, disk_mib=954, tmpdir=<TBD>, slurm_partition=medium, runtime=480

host: phoenix-16.prism
Building DAG of jobs...
Using shell: /usr/bin/bash
Provided cores: 32
Rules claiming more threads will be scaled down.
Provided resources: mem_mb=100000, mem_mib=95368, disk_mb=1000, disk_mib=954
Conda environments: ignored
Select jobs to execute...
Execute 1 jobs...

[Tue Mar 11 09:44:51 2025]
localrule circularize_merged:
    input: /private/groups/russelllab/jodie/merrill_23_wRi_genome/merged_polished/wRi/merged_pilon.fasta, /private/groups/russelllab/jodie/merrill_23_wRi_genome/nanopore_data/basecalled/merrill_23_all_basecalled.wRi.fastq.gz
    output: /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/wRi_final_merged_polished_circular.fasta, /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/assembly_stats.txt
    jobid: 0
    reason: Forced execution
    threads: 32
    resources: mem_mb=100000, mem_mib=95368, disk_mb=1000, disk_mib=954, tmpdir=/data/tmp, slurm_partition=medium, runtime=480

Traceback (most recent call last):
  File "/private/home/jomojaco/mambaforge/envs/snakemake_v8/bin/circlator", line 58, in <module>
    exec('circlator.tasks.' + task + '.run()')
  File "<string>", line 1, in <module>
  File "/private/home/jomojaco/mambaforge/envs/snakemake_v8/lib/python3.12/site-packages/circlator/tasks/all.py", line 74, in run
    circlator.versions.get_all_versions(None, raise_error=True, assembler=options.assembler)
  File "/private/home/jomojaco/mambaforge/envs/snakemake_v8/lib/python3.12/site-packages/circlator/versions.py", line 15, in get_all_versions
    external_progs.check_all_progs(verbose=False, raise_error=raise_error, filehandle=filehandle, debug=debug, assembler=assembler)
  File "/private/home/jomojaco/mambaforge/envs/snakemake_v8/lib/python3.12/site-packages/circlator/external_progs.py", line 105, in check_all_progs
    make_and_check_prog(prog, verbose=verbose, raise_error=raise_error, filehandle=filehandle, debug=debug, required=prog==assembler)
  File "/private/home/jomojaco/mambaforge/envs/snakemake_v8/lib/python3.12/site-packages/circlator/external_progs.py", line 78, in make_and_check_prog
    handle_error('Found ' + name + " but couldn't get version.", raise_error=raise_error)
  File "/private/home/jomojaco/mambaforge/envs/snakemake_v8/lib/python3.12/site-packages/circlator/external_progs.py", line 53, in handle_error
    raise Error(message + '\nCannot continue')
circlator.external_progs.Error: Found canu but couldn't get version.
Cannot continue
[Tue Mar 11 09:44:53 2025]
Error in rule circularize_merged:
    jobid: 0
    input: /private/groups/russelllab/jodie/merrill_23_wRi_genome/merged_polished/wRi/merged_pilon.fasta, /private/groups/russelllab/jodie/merrill_23_wRi_genome/nanopore_data/basecalled/merrill_23_all_basecalled.wRi.fastq.gz
    output: /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/wRi_final_merged_polished_circular.fasta, /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/assembly_stats.txt
    shell:
        
        # Create output directories
        mkdir -p /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/
        mkdir -p /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/tmp/
        
        # Try to circularize with Circlator
        circlator all --threads 32 /private/groups/russelllab/jodie/merrill_23_wRi_genome/merged_polished/wRi/merged_pilon.fasta /private/groups/russelllab/jodie/merrill_23_wRi_genome/nanopore_data/basecalled/merrill_23_all_basecalled.wRi.fastq.gz /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/tmp//circlator_out
        
        # Check if circlator produced a circularized genome
        if [ -s /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/tmp//circlator_out/06.fixstart.fasta ]; then
            # Use the circularized genome
            cp /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/tmp//circlator_out/06.fixstart.fasta /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/wRi_final_merged_polished_circular.fasta
            echo "Successfully circularized genome using Circlator" > /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/tmp//circular_status.txt
        else
            # Alternative approach: check for circularity manually
            # Extract sequences to temporary file
            seqtk seq -a /private/groups/russelllab/jodie/merrill_23_wRi_genome/merged_polished/wRi/merged_pilon.fasta > /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/tmp//polished.fa
            
            # Find the longest contig (likely the Wolbachia genome)
            LONGEST_CONTIG=$(seqtk comp /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/tmp//polished.fa | sort -k2,2nr | head -n1 | cut -f1)
            
            # Extract the longest contig
            seqtk subseq /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/tmp//polished.fa <(echo "$LONGEST_CONTIG") > /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/tmp//longest_contig.fa
            
            # Get sequence length
            LENGTH=$(seqtk comp /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/tmp//longest_contig.fa | cut -f2)
            
            # Check for circularity of the longest contig
            if [ $LENGTH -gt 10000 ]; then
                # Extract first and last 1000 bp
                head -n2 /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/tmp//longest_contig.fa | tail -n1 | cut -c 1-1000 > /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/tmp//start.fa
                head -n2 /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/tmp//longest_contig.fa | tail -n1 | rev | cut -c 1-1000 | rev > /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/tmp//end.fa
                
                # Use minimap2 for alignment
                MATCHES=$(minimap2 -c /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/tmp//start.fa /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/tmp//end.fa 2>/dev/null | wc -l)
                
                if [ $MATCHES -gt 0 ]; then
                    # Calculate identity using minimap2
                    IDENTITY=$(minimap2 -c /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/tmp//start.fa /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/tmp//end.fa 2>/dev/null | awk '{ident=$10/$11*100} END {print ident}')
                    
                    if (( $(echo "$IDENTITY > 95" | bc -l) )); then
                        # If circular, attempt to fix start position to dnaA gene
                        echo "Detected circular contig in merged assembly" > /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/tmp//circular_status.txt
                        
                        # Find dnaA gene position (if available)
                        prodigal -i /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/tmp//longest_contig.fa -a /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/tmp//proteins.faa -d /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/tmp//genes.fna -o /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/tmp//genes.gff
                        
                        # Look for dnaA gene
                        if grep -q "dnaA" /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/tmp//proteins.faa; then
                            # Extract the dnaA gene coordinates
                            DNAA_COORDS=$(grep "dnaA" /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/tmp//genes.gff | head -n1 | cut -f4,5)
                            START_POS=$(echo $DNAA_COORDS | cut -d' ' -f1)
                            
                            # Reorient the sequence to start at dnaA
                            if [ ! -z "$START_POS" ]; then
                                # Get the full sequence
                                SEQ=$(tail -n+2 /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/tmp//longest_contig.fa)
                                
                                # Reorient to start at dnaA
                                REORIENTED_SEQ="${SEQ:$START_POS}${SEQ:0:$START_POS}"
                                
                                # Write the reoriented sequence
                                echo ">$LONGEST_CONTIG circular=true" > /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/tmp//reoriented.fa
                                echo "$REORIENTED_SEQ" >> /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/tmp//reoriented.fa
                                
                                # Create the final assembly with just the circular chromosome
                                cp /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/tmp//reoriented.fa /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/wRi_final_merged_polished_circular.fasta
                                echo "Successfully reoriented circular genome to start at dnaA gene" >> /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/tmp//circular_status.txt
                            else
                                # If dnaA not found, use the original sequence but mark as circular
                                awk '{if(NR==1) print $0 " circular=true"; else print $0}' /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/tmp//longest_contig.fa > /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/wRi_final_merged_polished_circular.fasta
                                echo "Found circular genome but couldn't locate dnaA gene for reorientation" >> /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/tmp//circular_status.txt
                            fi
                        else
                            # If dnaA not found, use the original sequence but mark as circular
                            awk '{if(NR==1) print $0 " circular=true"; else print $0}' /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/tmp//longest_contig.fa > /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/wRi_final_merged_polished_circular.fasta
                            echo "Found circular genome but couldn't locate dnaA gene for reorientation" >> /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/tmp//circular_status.txt
                        fi
                    else
                        # Not circular, use merged assembly as is
                        cp /private/groups/russelllab/jodie/merrill_23_wRi_genome/merged_polished/wRi/merged_pilon.fasta /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/wRi_final_merged_polished_circular.fasta
                        echo "Contig appears non-circular (<95% terminal identity)" > /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/tmp//circular_status.txt
                    fi
                else
                    # Not circular, use merged assembly as is
                    cp /private/groups/russelllab/jodie/merrill_23_wRi_genome/merged_polished/wRi/merged_pilon.fasta /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/wRi_final_merged_polished_circular.fasta
                    echo "No terminal repeat detected, likely non-circular" > /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/tmp//circular_status.txt
                fi
            else
                # Too small, use merged assembly as is
                cp /private/groups/russelllab/jodie/merrill_23_wRi_genome/merged_polished/wRi/merged_pilon.fasta /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/wRi_final_merged_polished_circular.fasta
                echo "Contig too small for reliable circularity assessment" > /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/tmp//circular_status.txt
            fi
        fi
        
        # Generate assembly statistics
        echo "===== Assembly Statistics =====" > /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/assembly_stats.txt
        echo "Date: $(date)" >> /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/assembly_stats.txt
        echo "" >> /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/assembly_stats.txt
        
        # Circularity status
        echo "===== Circularity Status =====" >> /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/assembly_stats.txt
        cat /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/tmp//circular_status.txt >> /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/assembly_stats.txt
        echo "" >> /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/assembly_stats.txt
        
        # BUSCO statistics for the final assembly
        mkdir -p /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/tmp//busco
        busco -i /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/wRi_final_merged_polished_circular.fasta -o /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/tmp//busco -l rickettsiales_odb10 -m genome --cpu 32
        
        # Add BUSCO results to stats
        echo "===== BUSCO Assessment =====" >> /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/assembly_stats.txt
        grep "C:" /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/tmp//busco/short_summary*.txt >> /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/assembly_stats.txt
        echo "" >> /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/assembly_stats.txt
        
        # Count total contigs
        echo "Total contigs: $(grep -c "^>" /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/wRi_final_merged_polished_circular.fasta)" >> /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/assembly_stats.txt
        
        # Calculate N50, total size, etc.
        echo "===== Assembly Metrics =====" >> /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/assembly_stats.txt
        assembly-stats /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/wRi_final_merged_polished_circular.fasta >> /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/assembly_stats.txt
        
        # Run a final BUSCO for completeness
        echo "" >> /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/assembly_stats.txt
        echo "===== Final Assembly BUSCO =====" >> /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/assembly_stats.txt
        busco -i /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/wRi_final_merged_polished_circular.fasta -o /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/tmp//final_busco -l rickettsiales_odb10 -m genome --cpu 32
        grep "Complete:" /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/tmp//final_busco/short_summary*.txt >> /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/assembly_stats.txt
        
        # Clean up temporary files
        # rm -rf /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/tmp/
        
        (one of the commands exited with non-zero exit code; note that snakemake uses bash strict mode!)

Shutting down, this might take some time.
Exiting because a job execution failed. Look above for error message
Storing output in storage.
WorkflowError:
At least one job did not complete successfully.
srun: error: phoenix-16: task 0: Exited with exit code 1
[Tue Mar 11 09:44:53 2025]
Error in rule circularize_merged:
    jobid: 0
    input: /private/groups/russelllab/jodie/merrill_23_wRi_genome/merged_polished/wRi/merged_pilon.fasta, /private/groups/russelllab/jodie/merrill_23_wRi_genome/nanopore_data/basecalled/merrill_23_all_basecalled.wRi.fastq.gz
    output: /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/wRi_final_merged_polished_circular.fasta, /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/assembly_stats.txt
    shell:
        
        # Create output directories
        mkdir -p /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/
        mkdir -p /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/tmp/
        
        # Try to circularize with Circlator
        circlator all --threads 32 /private/groups/russelllab/jodie/merrill_23_wRi_genome/merged_polished/wRi/merged_pilon.fasta /private/groups/russelllab/jodie/merrill_23_wRi_genome/nanopore_data/basecalled/merrill_23_all_basecalled.wRi.fastq.gz /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/tmp//circlator_out
        
        # Check if circlator produced a circularized genome
        if [ -s /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/tmp//circlator_out/06.fixstart.fasta ]; then
            # Use the circularized genome
            cp /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/tmp//circlator_out/06.fixstart.fasta /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/wRi_final_merged_polished_circular.fasta
            echo "Successfully circularized genome using Circlator" > /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/tmp//circular_status.txt
        else
            # Alternative approach: check for circularity manually
            # Extract sequences to temporary file
            seqtk seq -a /private/groups/russelllab/jodie/merrill_23_wRi_genome/merged_polished/wRi/merged_pilon.fasta > /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/tmp//polished.fa
            
            # Find the longest contig (likely the Wolbachia genome)
            LONGEST_CONTIG=$(seqtk comp /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/tmp//polished.fa | sort -k2,2nr | head -n1 | cut -f1)
            
            # Extract the longest contig
            seqtk subseq /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/tmp//polished.fa <(echo "$LONGEST_CONTIG") > /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/tmp//longest_contig.fa
            
            # Get sequence length
            LENGTH=$(seqtk comp /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/tmp//longest_contig.fa | cut -f2)
            
            # Check for circularity of the longest contig
            if [ $LENGTH -gt 10000 ]; then
                # Extract first and last 1000 bp
                head -n2 /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/tmp//longest_contig.fa | tail -n1 | cut -c 1-1000 > /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/tmp//start.fa
                head -n2 /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/tmp//longest_contig.fa | tail -n1 | rev | cut -c 1-1000 | rev > /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/tmp//end.fa
                
                # Use minimap2 for alignment
                MATCHES=$(minimap2 -c /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/tmp//start.fa /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/tmp//end.fa 2>/dev/null | wc -l)
                
                if [ $MATCHES -gt 0 ]; then
                    # Calculate identity using minimap2
                    IDENTITY=$(minimap2 -c /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/tmp//start.fa /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/tmp//end.fa 2>/dev/null | awk '{ident=$10/$11*100} END {print ident}')
                    
                    if (( $(echo "$IDENTITY > 95" | bc -l) )); then
                        # If circular, attempt to fix start position to dnaA gene
                        echo "Detected circular contig in merged assembly" > /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/tmp//circular_status.txt
                        
                        # Find dnaA gene position (if available)
                        prodigal -i /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/tmp//longest_contig.fa -a /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/tmp//proteins.faa -d /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/tmp//genes.fna -o /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/tmp//genes.gff
                        
                        # Look for dnaA gene
                        if grep -q "dnaA" /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/tmp//proteins.faa; then
                            # Extract the dnaA gene coordinates
                            DNAA_COORDS=$(grep "dnaA" /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/tmp//genes.gff | head -n1 | cut -f4,5)
                            START_POS=$(echo $DNAA_COORDS | cut -d' ' -f1)
                            
                            # Reorient the sequence to start at dnaA
                            if [ ! -z "$START_POS" ]; then
                                # Get the full sequence
                                SEQ=$(tail -n+2 /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/tmp//longest_contig.fa)
                                
                                # Reorient to start at dnaA
                                REORIENTED_SEQ="${SEQ:$START_POS}${SEQ:0:$START_POS}"
                                
                                # Write the reoriented sequence
                                echo ">$LONGEST_CONTIG circular=true" > /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/tmp//reoriented.fa
                                echo "$REORIENTED_SEQ" >> /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/tmp//reoriented.fa
                                
                                # Create the final assembly with just the circular chromosome
                                cp /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/tmp//reoriented.fa /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/wRi_final_merged_polished_circular.fasta
                                echo "Successfully reoriented circular genome to start at dnaA gene" >> /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/tmp//circular_status.txt
                            else
                                # If dnaA not found, use the original sequence but mark as circular
                                awk '{if(NR==1) print $0 " circular=true"; else print $0}' /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/tmp//longest_contig.fa > /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/wRi_final_merged_polished_circular.fasta
                                echo "Found circular genome but couldn't locate dnaA gene for reorientation" >> /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/tmp//circular_status.txt
                            fi
                        else
                            # If dnaA not found, use the original sequence but mark as circular
                            awk '{if(NR==1) print $0 " circular=true"; else print $0}' /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/tmp//longest_contig.fa > /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/wRi_final_merged_polished_circular.fasta
                            echo "Found circular genome but couldn't locate dnaA gene for reorientation" >> /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/tmp//circular_status.txt
                        fi
                    else
                        # Not circular, use merged assembly as is
                        cp /private/groups/russelllab/jodie/merrill_23_wRi_genome/merged_polished/wRi/merged_pilon.fasta /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/wRi_final_merged_polished_circular.fasta
                        echo "Contig appears non-circular (<95% terminal identity)" > /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/tmp//circular_status.txt
                    fi
                else
                    # Not circular, use merged assembly as is
                    cp /private/groups/russelllab/jodie/merrill_23_wRi_genome/merged_polished/wRi/merged_pilon.fasta /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/wRi_final_merged_polished_circular.fasta
                    echo "No terminal repeat detected, likely non-circular" > /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/tmp//circular_status.txt
                fi
            else
                # Too small, use merged assembly as is
                cp /private/groups/russelllab/jodie/merrill_23_wRi_genome/merged_polished/wRi/merged_pilon.fasta /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/wRi_final_merged_polished_circular.fasta
                echo "Contig too small for reliable circularity assessment" > /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/tmp//circular_status.txt
            fi
        fi
        
        # Generate assembly statistics
        echo "===== Assembly Statistics =====" > /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/assembly_stats.txt
        echo "Date: $(date)" >> /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/assembly_stats.txt
        echo "" >> /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/assembly_stats.txt
        
        # Circularity status
        echo "===== Circularity Status =====" >> /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/assembly_stats.txt
        cat /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/tmp//circular_status.txt >> /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/assembly_stats.txt
        echo "" >> /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/assembly_stats.txt
        
        # BUSCO statistics for the final assembly
        mkdir -p /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/tmp//busco
        busco -i /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/wRi_final_merged_polished_circular.fasta -o /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/tmp//busco -l rickettsiales_odb10 -m genome --cpu 32
        
        # Add BUSCO results to stats
        echo "===== BUSCO Assessment =====" >> /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/assembly_stats.txt
        grep "C:" /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/tmp//busco/short_summary*.txt >> /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/assembly_stats.txt
        echo "" >> /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/assembly_stats.txt
        
        # Count total contigs
        echo "Total contigs: $(grep -c "^>" /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/wRi_final_merged_polished_circular.fasta)" >> /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/assembly_stats.txt
        
        # Calculate N50, total size, etc.
        echo "===== Assembly Metrics =====" >> /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/assembly_stats.txt
        assembly-stats /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/wRi_final_merged_polished_circular.fasta >> /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/assembly_stats.txt
        
        # Run a final BUSCO for completeness
        echo "" >> /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/assembly_stats.txt
        echo "===== Final Assembly BUSCO =====" >> /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/assembly_stats.txt
        busco -i /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/wRi_final_merged_polished_circular.fasta -o /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/tmp//final_busco -l rickettsiales_odb10 -m genome --cpu 32
        grep "Complete:" /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/tmp//final_busco/short_summary*.txt >> /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/assembly_stats.txt
        
        # Clean up temporary files
        # rm -rf /private/groups/russelllab/jodie/merrill_23_wRi_genome/assembly_final/merged/tmp/
        
        (one of the commands exited with non-zero exit code; note that snakemake uses bash strict mode!)

Shutting down, this might take some time.
Exiting because a job execution failed. Look above for error message
Storing output in storage.
WorkflowError:
At least one job did not complete successfully.
