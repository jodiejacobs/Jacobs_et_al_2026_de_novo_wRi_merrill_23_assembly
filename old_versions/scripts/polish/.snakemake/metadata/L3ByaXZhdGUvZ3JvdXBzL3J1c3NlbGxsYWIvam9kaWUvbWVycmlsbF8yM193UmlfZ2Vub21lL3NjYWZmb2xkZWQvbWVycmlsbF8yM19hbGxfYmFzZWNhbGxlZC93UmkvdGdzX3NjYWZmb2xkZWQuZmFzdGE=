{"code": "gASV8QUAAAAAAAAoQyCXAHQBAAAAAAAAAABkAXwNfBCsAqsDAAAAAAAAAQB5AJQojAVpbnB1dJSMBm91dHB1dJSMBnBhcmFtc5SMCXdpbGRjYXJkc5SMB3RocmVhZHOUjAlyZXNvdXJjZXOUjANsb2eUjARydWxllIwJY29uZGFfZW52lIwNY29udGFpbmVyX2ltZ5SMEHNpbmd1bGFyaXR5X2FyZ3OUjA91c2Vfc2luZ3VsYXJpdHmUjAtlbnZfbW9kdWxlc5SMDGJlbmNoX3JlY29yZJSMBWpvYmlklIwIaXNfc2hlbGyUjA9iZW5jaF9pdGVyYXRpb26UjA9jbGVhbnVwX3NjcmlwdHOUjApzaGFkb3dfZGlylIwNZWRpdF9ub3RlYm9va5SMD2NvbmRhX2Jhc2VfcGF0aJSMB2Jhc2VkaXKUjBBzb3VyY2VjYWNoZV9wYXRolIwYcnVudGltZV9zb3VyY2VjYWNoZV9wYXRolIwYX19pc19zbmFrZW1ha2VfcnVsZV9mdW5jlHSUXZQoTlhMBAAACiAgICAgICAgIyBDcmVhdGUgb3V0cHV0IGRpcmVjdG9yeQogICAgICAgIG1rZGlyIC1wIHtwYXJhbXMub3V0X2Rpcn0KICAgICAgICBta2RpciAtcCB7cGFyYW1zLnRtcF9kaXJ9CiAgICAgICAgCiAgICAgICAgIyBFeHRyYWN0IHJlYWRzIGZyb20gZ3ppcHBlZCBmaWxlCiAgICAgICAgemNhdCB7aW5wdXQubmFub3BvcmVfcmVhZHN9ID4ge3BhcmFtcy5vdXRfZGlyfS9uYW5vcG9yZV9yZWFkcy5mYXN0cQogICAgICAgIAogICAgICAgICMgQXBwcm9hY2ggMTogTElOS1Mgc2NhZmZvbGRlcgogICAgICAgIGVjaG8ge2lucHV0Lm5hbm9wb3JlX3JlYWRzfSA+IHtwYXJhbXMucmVhZF9saXN0fQogICAgICAgIExJTktTIC1mIHtpbnB1dC5uYW5vcG9yZV9wb2xpc2hlZH0gLXMge3BhcmFtcy5yZWFkX2xpc3R9IC1iIHtwYXJhbXMubGlua3NfcHJlZml4fSAtdCA1IC1rIDE5CiAgICAgICAgCiAgICAgICAgIyBNb3ZlIHRoZSBmaW5hbCBMSU5LUyBvdXRwdXQgdG8gZXhwZWN0ZWQgbG9jYXRpb24KICAgICAgICBjcCB7cGFyYW1zLmxpbmtzX3ByZWZpeH0uc2NhZmZvbGRzLmZhIHtvdXRwdXQubGlua3Nfc2NhZmZvbGRlZH0KICAgICAgICAKICAgICAgICAjICMgQXBwcm9hY2ggMjogVEdTLUdhcENsb3NlciAocmVwbGFjaW5nIFNTUEFDRSkKICAgICAgICAjIHRnc2dhcGNsb3NlciAgICAgICAgICMgICAgIC0tc2NhZmYgIHtpbnB1dC5uYW5vcG9yZV9wb2xpc2hlZH0gICAgICAgICAjICAgICAtLXJlYWRzIHtwYXJhbXMub3V0X2Rpcn0vbmFub3BvcmVfcmVhZHMuZmFzdHEgICAgICAgICAgIyAgICAgLS1vdXRwdXQge3BhcmFtcy50Z3Nfb3V0X2Rpcn0gICAgICAgICAjICAgICAtLXRocmVhZCAxNiAgICAgICAgICMgICAgIC0tbWluX21hdGNoIDAuMyAgICAgICAgICMgICAgIC0tbmUgICAgICAgICAjICAgICAtLXRnc3R5cGUgb250ICAgICAgICAgIyAgICAgLS10bXAge3BhcmFtcy50bXBfZGlyfQoKICAgICAgICAKICAgICAgICAjIE1vdmUgdGhlIFRHUy1HYXBDbG9zZXIgb3V0cHV0IHRvIGV4cGVjdGVkIGxvY2F0aW9uCiAgICAgICAgY3AgIHtpbnB1dC5uYW5vcG9yZV9wb2xpc2hlZH0ge291dHB1dC50Z3Nfc2NhZmZvbGRlZH0KICAgICAgICCUaA5oEYaUZYwFc2hlbGyUhZR0lC4=", "rule": "scaffold_assembly", "input": ["/private/groups/russelllab/jodie/merrill_23_wRi_genome/nanopore_data/basecalled/merrill_23_all_basecalled.wRi.fastq.gz", "/private/groups/russelllab/jodie/merrill_23_wRi_genome/polished/merrill_23_all_basecalled/wRi/polished.fasta"], "log": [], "params": ["'/private/groups/russelllab/jodie/merrill_23_wRi_genome/nanopore_data/read_list.txt'", "'/private/groups/russelllab/jodie/merrill_23_wRi_genome/scaffolded/merrill_23_all_basecalled/wRi/'", "'/private/groups/russelllab/jodie/merrill_23_wRi_genome/scaffolded/merrill_23_all_basecalled/wRi/links'", "'/private/groups/russelllab/jodie/merrill_23_wRi_genome/scaffolded/merrill_23_all_basecalled/wRi/tgs_out'", "'/private/groups/russelllab/jodie/merrill_23_wRi_genome/scaffolded/merrill_23_all_basecalled/wRi/tmp'"], "shellcmd": "\n        # Create output directory\n        mkdir -p /private/groups/russelllab/jodie/merrill_23_wRi_genome/scaffolded/merrill_23_all_basecalled/wRi/\n        mkdir -p /private/groups/russelllab/jodie/merrill_23_wRi_genome/scaffolded/merrill_23_all_basecalled/wRi/tmp\n        \n        # Extract reads from gzipped file\n        zcat /private/groups/russelllab/jodie/merrill_23_wRi_genome/nanopore_data/basecalled/merrill_23_all_basecalled.wRi.fastq.gz > /private/groups/russelllab/jodie/merrill_23_wRi_genome/scaffolded/merrill_23_all_basecalled/wRi//nanopore_reads.fastq\n        \n        # Approach 1: LINKS scaffolder\n        echo /private/groups/russelllab/jodie/merrill_23_wRi_genome/nanopore_data/basecalled/merrill_23_all_basecalled.wRi.fastq.gz > /private/groups/russelllab/jodie/merrill_23_wRi_genome/nanopore_data/read_list.txt\n        LINKS -f /private/groups/russelllab/jodie/merrill_23_wRi_genome/polished/merrill_23_all_basecalled/wRi/polished.fasta -s /private/groups/russelllab/jodie/merrill_23_wRi_genome/nanopore_data/read_list.txt -b /private/groups/russelllab/jodie/merrill_23_wRi_genome/scaffolded/merrill_23_all_basecalled/wRi/links -t 5 -k 19\n        \n        # Move the final LINKS output to expected location\n        cp /private/groups/russelllab/jodie/merrill_23_wRi_genome/scaffolded/merrill_23_all_basecalled/wRi/links.scaffolds.fa /private/groups/russelllab/jodie/merrill_23_wRi_genome/scaffolded/merrill_23_all_basecalled/wRi/links_scaffolded.fasta\n        \n        # # Approach 2: TGS-GapCloser (replacing SSPACE)\n        # tgsgapcloser         #     --scaff  /private/groups/russelllab/jodie/merrill_23_wRi_genome/polished/merrill_23_all_basecalled/wRi/polished.fasta         #     --reads /private/groups/russelllab/jodie/merrill_23_wRi_genome/scaffolded/merrill_23_all_basecalled/wRi//nanopore_reads.fastq          #     --output /private/groups/russelllab/jodie/merrill_23_wRi_genome/scaffolded/merrill_23_all_basecalled/wRi/tgs_out         #     --thread 16         #     --min_match 0.3         #     --ne         #     --tgstype ont         #     --tmp /private/groups/russelllab/jodie/merrill_23_wRi_genome/scaffolded/merrill_23_all_basecalled/wRi/tmp\n\n        \n        # Move the TGS-GapCloser output to expected location\n        cp  /private/groups/russelllab/jodie/merrill_23_wRi_genome/polished/merrill_23_all_basecalled/wRi/polished.fasta /private/groups/russelllab/jodie/merrill_23_wRi_genome/scaffolded/merrill_23_all_basecalled/wRi/tgs_scaffolded.fasta\n        ", "incomplete": false, "starttime": 1741401203.9670346, "endtime": 1741401228.6637845, "job_hash": 8786415420982, "conda_env": null, "container_img_url": null, "input_checksums": {}}