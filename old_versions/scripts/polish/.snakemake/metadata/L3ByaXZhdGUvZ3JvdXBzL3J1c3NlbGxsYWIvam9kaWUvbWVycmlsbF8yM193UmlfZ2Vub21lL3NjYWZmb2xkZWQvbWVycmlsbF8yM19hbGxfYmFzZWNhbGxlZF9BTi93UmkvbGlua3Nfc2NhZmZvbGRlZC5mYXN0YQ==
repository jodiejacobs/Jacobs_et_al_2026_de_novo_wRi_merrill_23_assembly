{"code": "gASVhgQAAAAAAAAoQyCXAHQBAAAAAAAAAABkAXwNfBCsAqsDAAAAAAAAAQB5AJQojAVpbnB1dJSMBm91dHB1dJSMBnBhcmFtc5SMCXdpbGRjYXJkc5SMB3RocmVhZHOUjAlyZXNvdXJjZXOUjANsb2eUjARydWxllIwJY29uZGFfZW52lIwNY29udGFpbmVyX2ltZ5SMEHNpbmd1bGFyaXR5X2FyZ3OUjA91c2Vfc2luZ3VsYXJpdHmUjAtlbnZfbW9kdWxlc5SMDGJlbmNoX3JlY29yZJSMBWpvYmlklIwIaXNfc2hlbGyUjA9iZW5jaF9pdGVyYXRpb26UjA9jbGVhbnVwX3NjcmlwdHOUjApzaGFkb3dfZGlylIwNZWRpdF9ub3RlYm9va5SMD2NvbmRhX2Jhc2VfcGF0aJSMB2Jhc2VkaXKUjBBzb3VyY2VjYWNoZV9wYXRolIwYcnVudGltZV9zb3VyY2VjYWNoZV9wYXRolIwYX19pc19zbmFrZW1ha2VfcnVsZV9mdW5jlHSUXZQoTljhAgAACiAgICAgICAgIyBDcmVhdGUgb3V0cHV0IGRpcmVjdG9yeQogICAgICAgIG1rZGlyIC1wIHtwYXJhbXMub3V0X2Rpcn0KICAgICAgICAKICAgICAgICAjIEV4dHJhY3QgcmVhZHMgZnJvbSBnemlwcGVkIGZpbGUgZm9yIExJTktTCiAgICAgICAgZWNobyB7aW5wdXQubmFub3BvcmVfcmVhZHN9ID4ge3BhcmFtcy5yZWFkX2xpc3R9CiAgICAgICAgCiAgICAgICAgIyBVc2UgTElOS1Mgc2NhZmZvbGRlcgogICAgICAgIExJTktTIC1mIHtpbnB1dC5uYW5vcG9yZV9wb2xpc2hlZH0gLXMge3BhcmFtcy5yZWFkX2xpc3R9IC1iIHtwYXJhbXMubGlua3NfcHJlZml4fSAtdCA1IC1rIDE5CiAgICAgICAgCiAgICAgICAgIyBNb3ZlIHRoZSBmaW5hbCBMSU5LUyBvdXRwdXQgdG8gZXhwZWN0ZWQgbG9jYXRpb24KICAgICAgICBjcCB7cGFyYW1zLmxpbmtzX3ByZWZpeH0uc2NhZmZvbGRzLmZhIHtvdXRwdXQubGlua3Nfc2NhZmZvbGRlZH0KICAgICAgICAKICAgICAgICAjIFJlbmFtZSB0aGUgc2NhZmZvbGQgaGVhZGVycyB0byBiZSBjb21wYXRpYmxlIHdpdGggUGlsb24KICAgICAgICAjIENvdW50IHRoZSBzZXF1ZW5jZXMgYW5kIHJlbmFtZSB0aGVtIGFzIHNpbXBsZSB3Umlfc2NhZmZvbGRfTgogICAgICAgIGF3ayAnL14+L3t7cHJpbnQgIj53Umlfc2NhZmZvbGRfIiArK2k7IG5leHR9fXt7cHJpbnR9fScge291dHB1dC5saW5rc19zY2FmZm9sZGVkfSA+IHtvdXRwdXQubGlua3NfcmVuYW1lZH0KICAgICAgICCUaA5oEYaUZYwFc2hlbGyUhZR0lC4=", "rule": "scaffold_assembly", "input": ["/private/groups/russelllab/jodie/merrill_23_wRi_genome/nanopore_data/basecalled/merrill_23_all_basecalled.wRi.fastq.gz", "/private/groups/russelllab/jodie/merrill_23_wRi_genome/polished/merrill_23_all_basecalled_AN/wRi/polished.fasta"], "log": [], "params": ["'/private/groups/russelllab/jodie/merrill_23_wRi_genome/nanopore_data/read_list.txt'", "'/private/groups/russelllab/jodie/merrill_23_wRi_genome/scaffolded/merrill_23_all_basecalled_AN/wRi/'", "'/private/groups/russelllab/jodie/merrill_23_wRi_genome/scaffolded/merrill_23_all_basecalled_AN/wRi/links'"], "shellcmd": "\n        # Create output directory\n        mkdir -p /private/groups/russelllab/jodie/merrill_23_wRi_genome/scaffolded/merrill_23_all_basecalled_AN/wRi/\n        \n        # Extract reads from gzipped file for LINKS\n        echo /private/groups/russelllab/jodie/merrill_23_wRi_genome/nanopore_data/basecalled/merrill_23_all_basecalled.wRi.fastq.gz > /private/groups/russelllab/jodie/merrill_23_wRi_genome/nanopore_data/read_list.txt\n        \n        # Use LINKS scaffolder\n        LINKS -f /private/groups/russelllab/jodie/merrill_23_wRi_genome/polished/merrill_23_all_basecalled_AN/wRi/polished.fasta -s /private/groups/russelllab/jodie/merrill_23_wRi_genome/nanopore_data/read_list.txt -b /private/groups/russelllab/jodie/merrill_23_wRi_genome/scaffolded/merrill_23_all_basecalled_AN/wRi/links -t 5 -k 19\n        \n        # Move the final LINKS output to expected location\n        cp /private/groups/russelllab/jodie/merrill_23_wRi_genome/scaffolded/merrill_23_all_basecalled_AN/wRi/links.scaffolds.fa /private/groups/russelllab/jodie/merrill_23_wRi_genome/scaffolded/merrill_23_all_basecalled_AN/wRi/links_scaffolded.fasta\n        \n        # Rename the scaffold headers to be compatible with Pilon\n        # Count the sequences and rename them as simple wRi_scaffold_N\n        awk '/^>/{print \">wRi_scaffold_\" ++i; next}{print}' /private/groups/russelllab/jodie/merrill_23_wRi_genome/scaffolded/merrill_23_all_basecalled_AN/wRi/links_scaffolded.fasta > /private/groups/russelllab/jodie/merrill_23_wRi_genome/scaffolded/merrill_23_all_basecalled_AN/wRi/links_scaffolded_renamed.fasta\n        ", "incomplete": false, "starttime": 1741643570.2027268, "endtime": 1741643593.627874, "job_hash": 8783267351145, "conda_env": null, "container_img_url": null, "input_checksums": {}}